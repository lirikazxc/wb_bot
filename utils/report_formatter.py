async def handle_sales_report(data):
    if not data:
        return "–î–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."

    report = "üìä **–û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º**:\n"
    total_sales = 0
    total_commission = 0
    total_items = len(data)

    report += f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ—Ç—á–µ—Ç–µ: {total_items}\n\n"

    for item in data:
        product_name = item.get("brand", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        price_with_disc = item.get("priceWithDisc", 0)
        total_price = item.get("totalPrice", 0)
        commission = total_price * 0.15  # 15% –∫–æ–º–∏—Å—Å–∏—è –∫ –ø—Ä–∏–º–µ—Ä—É

        total_sales += total_price
        total_commission += commission

        report += f"–¢–æ–≤–∞—Ä: {product_name}\n"
        report += f"  - –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: {price_with_disc} —Ä—É–±\n"
        report += f"  - –û–±—â–∞—è —Ü–µ–Ω–∞: {total_price} —Ä—É–±\n"
        report += f"  - –ö–æ–º–∏—Å—Å–∏—è (15%): {commission:.2f} —Ä—É–±\n"
        report += "-" * 40 + "\n"

    report += f"\nüîπ **–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ**:\n"
    report += f"  - **–û–±—â–∞—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂**: {total_sales} —Ä—É–±\n"
    report += f"  - **–û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è**: {total_commission:.2f} —Ä—É–±\n"
    report += f"  - **–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å** (–ø–æ—Å–ª–µ –∫–æ–º–∏—Å—Å–∏–∏): {total_sales - total_commission:.2f} —Ä—É–±\n"

    return report



async def handle_stocks_report(data):
    if not data:
        return "–î–∞–Ω–Ω—ã–µ –ø–æ —Ç–æ–≤–∞—Ä–∞–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."

    report = "üì¶ **–û—Ç—á–µ—Ç –ø–æ –Ω–∞–ª–∏—á–∏—é —Ç–æ–≤–∞—Ä–æ–≤**:\n"
    total_items = len(data)
    total_value = 0
    total_discounted_value = 0

    report += f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ—Ç—á–µ—Ç–µ: {total_items}\n\n"

    for item in data:
        product_name = item.get("brand", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        category = item.get("category", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
        subject = item.get("subject", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        price = item.get("Price", 0)
        quantity_full = item.get("quantityFull", 0)
        quantity_in_way = item.get("inWayToClient", 0)
        quantity_from_client = item.get("inWayFromClient", 0)
        total_value_for_product = price * quantity_full

        total_value += total_value_for_product
        total_discounted_value += total_value_for_product * (1 - item.get("Discount", 0) / 100)

        report += f"**–¢–æ–≤–∞—Ä**: {product_name} ({category}, {subject})\n"
        report += f"  - –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {price} —Ä—É–±\n"
        report += f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–ª–∏—á–∏–∏: {quantity_full} —à—Ç\n"
        report += f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É: {quantity_in_way} —à—Ç\n"
        report += f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –ø—É—Ç–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞: {quantity_from_client} —à—Ç\n"
        report += f"  - –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {total_value_for_product} —Ä—É–±\n"
        report += "-" * 40 + "\n"

    report += f"\nüîπ **–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ**:\n"
    report += f"  - **–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏**: {total_value} —Ä—É–±\n"
    report += f"  - **–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ —Å–∫–∏–¥–∫–∞–º–∏**: {total_discounted_value:.2f} —Ä—É–±\n"

    return report


async def handle_incomes_report(data):
    if not data:
        return "–î–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."

    report = "üì¶ **–û—Ç—á–µ—Ç –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é —Ç–æ–≤–∞—Ä–æ–≤**:\n"
    total_items = len(data)
    total_quantity = 0

    report += f"–í—Å–µ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π –≤ –æ—Ç—á–µ—Ç–µ: {total_items}\n\n"

    for item in data:
        product_name = item.get("supplierArticle", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        quantity = item.get("quantity", 0)
        warehouse = item.get("warehouseName", "–ù–µ —É–∫–∞–∑–∞–Ω")
        total_price = item.get("totalPrice", 0)
        status = item.get("status", "–ù–µ —É–∫–∞–∑–∞–Ω")
        date = item.get("date", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
        last_change_date = item.get("lastChangeDate", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
        date_close = item.get("dateClose", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")

        total_quantity += quantity

        report += f"**–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞**: {product_name}\n"
        report += f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç—É–ø–∏–≤—à–∏—Ö –µ–¥–∏–Ω–∏—Ü: {quantity} —à—Ç\n"
        report += f"  - –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {total_price} —Ä—É–±\n"
        report += f"  - –°–∫–ª–∞–¥: {warehouse}\n"
        report += f"  - –°—Ç–∞—Ç—É—Å: {status}\n"
        report += f"  - –î–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: {date}\n"
        report += f"  - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {last_change_date}\n"
        report += f"  - –î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: {date_close}\n"
        report += "-" * 40 + "\n"

    report += f"\nüîπ **–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ**:\n"
    report += f"  - **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç—É–ø–∏–≤—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤**: {total_quantity} —à—Ç\n"

    return report


async def handle_orders_report(data):
    if not data:
        return "–î–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑–∞–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."

    report = "üì¶ **–û—Ç—á–µ—Ç –ø–æ –∑–∞–∫–∞–∑–∞–º**:\n"
    total_orders = len(data)
    total_sales = 0
    total_commission = 0
    canceled_orders = 0

    report += f"–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –æ—Ç—á–µ—Ç–µ: {total_orders}\n\n"

    for item in data:
        order_number = item.get("incomeID", "–ù–µ —É–∫–∞–∑–∞–Ω")
        product_name = item.get("brand", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        total_price = item.get("totalPrice", 0)
        commission = total_price * 0.15  # –ü—Ä–∏–º–µ—Ä 15% –∫–æ–º–∏—Å—Å–∏—è
        is_cancel = item.get("isCancel", False)
        cancel_date = item.get("cancelDate", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
        order_type = item.get("orderType", "–ù–µ —É–∫–∞–∑–∞–Ω")
        status = item.get("status", "–ù–µ —É–∫–∞–∑–∞–Ω")
        warehouse = item.get("warehouseName", "–ù–µ —É–∫–∞–∑–∞–Ω")
        date = item.get("date", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")

        total_sales += total_price
        total_commission += commission

        if is_cancel:
            canceled_orders += total_price
            report += f"‚ùå **–û—Ç–º–µ–Ω–µ–Ω–æ** (–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_number})\n"
            report += f"  - –î–∞—Ç–∞ –æ—Ç–º–µ–Ω—ã: {cancel_date}\n"
            report += f"  - –°—Ç–∞—Ç—É—Å: {status}\n"
            report += f"  - –°–∫–ª–∞–¥: {warehouse}\n"
            report += f"  - –¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞: {total_price} —Ä—É–±\n"
            report += "-" * 40 + "\n"
        else:
            report += f"**–ó–∞–∫–∞–∑ ‚Ññ{order_number}** ({order_type})\n"
            report += f"  - –¢–æ–≤–∞—Ä: {product_name}\n"
            report += f"  - –û–±—â–∞—è —Å—É–º–º–∞: {total_price} —Ä—É–±\n"
            report += f"  - –ö–æ–º–∏—Å—Å–∏—è (15%): {commission:.2f} —Ä—É–±\n"
            report += f"  - –°—Ç–∞—Ç—É—Å: {status}\n"
            report += f"  - –°–∫–ª–∞–¥: {warehouse}\n"
            report += f"  - –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: {date}\n"
            report += "-" * 40 + "\n"

    report += f"\nüîπ **–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ**:\n"
    report += f"  - **–û–±—â–∞—è —Å—É–º–º–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤**: {total_sales} —Ä—É–±\n"
    report += f"  - **–û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è**: {total_commission:.2f} —Ä—É–±\n"
    report += f"  - **–û–±—â–∞—è —Å—É–º–º–∞ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤**: {canceled_orders} —Ä—É–±\n"
    report += f"  - **–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å (–ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω)**: {total_sales - total_commission - canceled_orders:.2f} —Ä—É–±\n"

    return report


async def handle_reportDetailByPeriod(data):
    if not data:
        return "–î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
    report = "–î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º:\n"

    for item in data:
        report += f"–ü–µ—Ä–∏–æ–¥: {item.get('date', '–ù–µ —É–∫–∞–∑–∞–Ω')} - –ü—Ä–æ–¥–∞–∂–∏: {item.get('totalPrice', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')} —Ä—É–±\n"
    return report
